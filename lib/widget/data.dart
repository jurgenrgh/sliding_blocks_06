///////////////////////////////////////////////////////////////
/// Manually provided data for each game
///////////////////////////////////////////////////////////////
class Data {
  //
  ////////////////////////////////////////////////////////////
  // Nbr of tiles in Width and Height of the Board for each Game
  ////////////////////////////////////////////////////////////
  static List<int> nbrTilesWidth = [4, 4, 4, 4, 4];
  static List<int> nbrTilesHeight = [5, 5, 5, 5, 5];
  //
  /////////////////////////////////////////////////////////////
  // Codes, Names, Number of Moves, Difficulty Rating: From the Hordern book
  /////////////////////////////////////////////////////////////
  static List<String> gameCode = ["C15", "C16", "C17", "C18", "C19"];
  static List<String> gameName = [
    "Hordern C15",
    "Hordern C16",
    "Traffic Cop Tangle",
    "Hordern C18",
    "Dad's Puzzler"
  ];
  static List<int> gameNbrMoves = [63, 40, 47, 33, 59];
  static List<int> gameRating = [2, 2, 1, 1, 2];
  static int nbrGames = gameCode.length;
  //
  /////////////////////////////////////////////////////////////////////////
  // For each game gix and each block bix the width w and height h in tiles
  // listBlocks[gix][bix][w,h]
  // Each entry is [width, height] of a block.
  // Units are elementary tiles(squares);
  /////////////////////////////////////////////////////////////////////////
  static List<List<List<int>>> listBlocks = [
    [
      [1, 2],
      [1, 2],
      [1, 1],
      [1, 1],
      [1, 2],
      [1, 1],
      [1, 1],
      [1, 2],
      [2, 1],
      [2, 2],
    ],
    [
      [1, 2],
      [1, 2],
      [1, 2],
      [1, 1],
      [1, 1],
      [2, 1],
      [1, 2],
      [1, 1],
      [1, 1],
      [2, 2],
    ],
    [
      [1, 1],
      [1, 1],
      [2, 1],
      [1, 1],
      [1, 1],
      [2, 1],
      [1, 1],
      [1, 1],
      [2, 2],
      [2, 2],
    ],
    [
      [2, 1],
      [2, 1],
      [1, 2],
      [1, 2],
      [2, 1],
      [2, 1],
      [1, 1],
      [1, 1],
      [2, 2],
    ],
    [
      [2, 1],
      [2, 1],
      [2, 1],
      [2, 1],
      [1, 2],
      [1, 2],
      [1, 1],
      [1, 1],
      [2, 2],
    ],
  ];
  //
  ////////////////////////////////////////////////////////////////////////
  // initialPosition:
  // For each Block bix in each Game gix
  // the coordinates [x0,y0] of the upper left hand corner.
  // Units are elementary squares.
  //////////////////////////////////////////////////////////////////////////
  static List<List<List<int>>> initialPosition = [
    [
      [2, 0],
      [3, 0],
      [3, 2],
      [3, 3],
      [2, 2],
      [1, 3],
      [1, 4],
      [0, 3],
      [0, 2],
      [0, 0],
    ],
    [
      [2, 0],
      [3, 0],
      [2, 2],
      [3, 2],
      [3, 3],
      [2, 4],
      [1, 3],
      [0, 2],
      [1, 2],
      [0, 0],
    ],
    [
      [2, 0],
      [3, 0],
      [2, 1],
      [2, 2],
      [3, 2],
      [2, 3],
      [2, 4],
      [3, 4],
      [0, 0],
      [0, 3],
    ],
    [
      [2, 0],
      [2, 1],
      [3, 3],
      [2, 3],
      [0, 4],
      [0, 3],
      [0, 2],
      [1, 2],
      [0, 0],
    ],
    [
      [2, 0],
      [2, 1],
      [2, 3],
      [2, 4],
      [1, 3],
      [0, 3],
      [0, 2],
      [1, 2],
      [0, 0],
    ],
  ];
  //
  //////////////////////////////////////////////////////////////////////////
  // finalPosition:
  // For each Block bix in each Game gix
  // the coordinates [x0,y0] of the upper left hand corner.
  // Units are elementary squares.
  //////////////////////////////////////////////////////////////////////////
  static List<List<List<int>>> finalPosition = [
    [
      [3, 0],
      [0, 0],
      [3, 3],
      [3, 4],
      [2, 0],
      [0, 4],
      [0, 3],
      [1, 0],
      [1, 2],
      [1, 3],
    ],
    [
      [2, 1],
      [3, 1],
      [0, 0],
      [2, 3],
      [2, 0],
      [2, 4],
      [1, 0],
      [3, 0],
      [3, 3],
      [0, 3],
    ],
    [
      [2, 2],
      [3, 2],
      [2, 0],
      [2, 1],
      [3, 1],
      [2, 3],
      [3, 4],
      [2, 4],
      [0, 3],
      [0, 0],
    ],
    [
      [0, 0],
      [0, 1],
      [2, 0],
      [3, 0],
      [0, 4],
      [0, 3],
      [0, 2],
      [1, 2],
      [2, 3],
    ],
    [
      [2, 1],
      [2, 0],
      [2, 4],
      [2, 3],
      [0, 0],
      [1, 0],
      [3, 2],
      [2, 2],
      [0, 3],
    ],
  ];
}
